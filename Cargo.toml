[package]
name = "telers"
version = "1.0.0-alpha.12"
edition = "2021"
description = "An asynchronous framework for Telegram Bot API written in Rust"
repository = "https://github.com/Desiders/telers"
license = "MIT OR Apache-2.0"
keywords = ["bot", "telegram", "telegram-bot", "telegram-bot-api", "telers"]
categories = ["web-programming", "api-bindings", "asynchronous"]

[features]
default = []
# Include all possible features
full = ["storages"]
# Include all possible storages
storages = ["redis-storage", "memory-storage"]
# For possible use redis FSM storage
redis-storage = ["redis"]
# For possible use memory FSM storage
memory-storage = ["bincode"]

[dependencies]
tokio = { version = "1.33", features = ["sync", "macros", "signal", "fs"] }
tokio-util = { version = "0.7.9", features = ["codec"] }
reqwest = { version = "0.11", features = ["multipart", "stream"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.4"
strum = "0.25"
strum_macros = "0.25"
futures = "0.3"
async-trait = "0.1"
once_cell = "1.16"
thiserror = "1.0"
anyhow = "1.0"
tracing = "0.1"
dashmap = "5.4"
regex = "1.10"
backoff = "0.4"
bytes = "1.3"
takecell = "0.1"
pathdiff = "0.2"
uuid = { version = "1.5", features = ["v4"] }

redis = { version = "0.23", features = ["tokio-comp"], optional = true }
bincode = { version = "1.3", optional = true }

[dev-dependencies]
tokio-test = "0.4"
criterion = { version = "0.5", features = ["async_tokio"] }

[[bench]]
name = "router"
harness = false

[workspace]
members = [
    "./examples/echo_bot",
    "./examples/text_formatting",
    "./examples/axum_and_echo_bot",
    "./examples/finite_state_machine",
    "./examples/bot_http_client",
    "./examples/text_case_filters",
    "./examples/stats_incoming_updates_middleware",
    "./examples/router_tree",
    "./examples/input_file",
]

[patch.crates-io]
echo_bot = { path = "./examples/echo_bot" }
text_case_filters = { path = "./examples/text_case_filters" }
stats_incoming_updates_middleware = { path = "./examples/stats_incoming_updates_middleware" }
input_file = { path = "./examples/input_file" }
finite_state_machine = { path = "./examples/finite_state_machine" }
router_tree = { path = "./examples/router_tree" }
bot_http_client = { path = "./examples/bot_http_client" }
axum_and_echo_bot = { path = "./examples/axum_and_echo_bot" }